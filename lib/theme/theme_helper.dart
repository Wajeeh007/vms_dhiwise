import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.gray20001,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.only(
              topLeft: Radius.circular(8.h),
              topRight: Radius.circular(0.h),
              bottomLeft: Radius.circular(8.h),
              bottomRight: Radius.circular(0.h),
            ),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      radioTheme: RadioThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return appTheme.gray5001;
          }
          return colorScheme.onSurface;
        }),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return appTheme.gray5001;
          }
          return colorScheme.onSurface;
        }),
        side: BorderSide(
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray20001,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.blueGray30001,
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.blueGray30001,
          fontSize: 10.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: appTheme.gray90001,
          fontSize: 32.fSize,
          fontFamily: 'DM Serif Display',
          fontWeight: FontWeight.w400,
        ),
        headlineSmall: TextStyle(
          color: colorScheme.primary,
          fontSize: 24.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray90001,
          fontSize: 12.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.blueGray30001,
          fontSize: 10.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.blueGray90001,
          fontSize: 20.fSize,
          fontFamily: 'DM Serif Text',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray900,
          fontSize: 16.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray90001,
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF3669C9),
    primaryContainer: Color(0XFF0C1A30),
    secondaryContainer: Color(0XFFFE3A30),

    // Error colors
    errorContainer: Color(0XFF1A56DB),
    onError: Color(0XFFFF6700),

    // On colors(text colors)
    onPrimary: Color(0XFF0E1216),
    onPrimaryContainer: Color(0XFF16BDCA),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber400 => Color(0XFFFFC120);

  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue50 => Color(0XFFE1EFFE);
  Color get blue5001 => Color(0XFFEBF5FF);
  Color get blue5002 => Color(0XFFDFEFFF);
  Color get blueA700 => Color(0XFF0469FF);

  // BlueGray
  Color get blueGray100 => Color(0XFFD1D5DB);
  Color get blueGray300 => Color(0XFF9CA3AF);
  Color get blueGray30001 => Color(0XFF929AAB);
  Color get blueGray50 => Color(0XFFEBEFF3);
  Color get blueGray700 => Color(0XFF4B5563);
  Color get blueGray800 => Color(0XFF364554);
  Color get blueGray900 => Color(0XFF1F2A37);
  Color get blueGray90001 => Color(0XFF333333);

  // Cyan
  Color get cyan50 => Color(0XFFD5F5F6);
  Color get cyan800 => Color(0XFF047481);

  // DeepOrange
  Color get deepOrange200 => Color(0XFFFDBA8C);
  Color get deepOrangeA700 => Color(0XFFD03801);

  // Gray
  Color get gray100 => Color(0XFFF3F4F6);
  Color get gray10001 => Color(0XFFF7F7F7);
  Color get gray10002 => Color(0XFFEFF5FB);
  Color get gray10003 => Color(0XFFEDFAFA);
  Color get gray200 => Color(0XFFE5E7EB);
  Color get gray20001 => Color(0XFFEEEEEE);
  Color get gray50 => Color(0XFFFFF8F1);
  Color get gray5001 => Color(0XFFF9FAFB);
  Color get gray600 => Color(0XFF6F6F6F);
  Color get gray60001 => Color(0XFF6B7280);
  Color get gray900 => Color(0XFF111928);
  Color get gray90001 => Color(0XFF24272C);

  // Orange
  Color get orange50 => Color(0XFFFEECDC);

  // Pink
  Color get pink400 => Color(0XFFE74694);

  // Red
  Color get red50 => Color(0XFFFCECEF);
  Color get red500 => Color(0XFFEA4335);

  // Teal
  Color get teal100 => Color(0XFFBDE8DA);
  Color get teal10001 => Color(0XFFBDE9DA);
  Color get teal50 => Color(0XFFDEF7EC);
  Color get teal900 => Color(0XFF03543F);
  Color get tealA700 => Color(0XFF06D38F);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow200 => Color(0XFFFFE4A0);
  Color get yellow20001 => Color(0XFFFFE8A4);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
